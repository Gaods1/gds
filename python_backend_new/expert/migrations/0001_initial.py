# Generated by Django 2.1.1 on 2019-12-12 11:05

from django.db import migrations, models
import misc.misc
import misc.validate


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BrokerApplyHistory',
            fields=[
                ('serial', models.AutoField(primary_key=True, serialize=False)),
                ('apply_code', models.CharField(default=misc.misc.gen_uuid32, max_length=64, unique=True)),
                ('broker_code', models.CharField(blank=True, max_length=64, null=True)),
                ('account_code', models.CharField(blank=True, max_length=64, null=True)),
                ('state', models.IntegerField(blank=True, null=True)),
                ('apply_time', models.DateTimeField(auto_now_add=True)),
                ('apply_type', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'broker_apply_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BrokerBaseinfo',
            fields=[
                ('serial', models.AutoField(primary_key=True, serialize=False)),
                ('broker_code', models.CharField(default=misc.misc.gen_uuid32, max_length=64, unique=True)),
                ('pcode', models.CharField(blank=True, max_length=64, null=True)),
                ('broker_name', models.CharField(max_length=64, verbose_name='姓名')),
                ('broker_tel', models.CharField(blank=True, max_length=16, null=True, validators=[misc.validate.validate_tel])),
                ('broker_mobile', models.CharField(max_length=16, validators=[misc.validate.validate_mobile], verbose_name='手机号码')),
                ('broker_email', models.CharField(blank=True, max_length=64, null=True, validators=[misc.validate.validate_email])),
                ('broker_id_type', models.IntegerField(default=1, verbose_name='证件类型')),
                ('broker_id', models.CharField(max_length=32, verbose_name='证件号码')),
                ('broker_graduate_school', models.CharField(max_length=255, verbose_name='毕业院校')),
                ('broker_major', models.CharField(max_length=255, verbose_name='专业')),
                ('broker_address', models.CharField(blank=True, max_length=255, null=True)),
                ('broker_city', models.IntegerField(verbose_name='归属城市')),
                ('broker_abstract', models.TextField(verbose_name='自我介绍')),
                ('education', models.CharField(default=3, max_length=8, verbose_name='学历')),
                ('broker_abbr', models.CharField(blank=True, max_length=32, null=True)),
                ('broker_caption', models.CharField(blank=True, max_length=32, null=True)),
                ('work_type', models.IntegerField(default=1, verbose_name='工作方式')),
                ('ecode', models.CharField(blank=True, max_length=64, null=True)),
                ('broker_level', models.IntegerField(default=1, null=True)),
                ('credit_value', models.IntegerField(default=0, null=True)),
                ('broker_integral', models.IntegerField(default=0, null=True)),
                ('state', models.IntegerField(default=1)),
                ('creater', models.CharField(blank=True, max_length=32, null=True)),
                ('insert_time', models.DateTimeField(auto_now_add=True)),
                ('account_code', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'broker_baseinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BrokerCheckHistory',
            fields=[
                ('serial', models.AutoField(primary_key=True, serialize=False)),
                ('apply_code', models.CharField(blank=True, max_length=64, null=True)),
                ('opinion', models.TextField(blank=True, null=True)),
                ('result', models.IntegerField(blank=True, null=True)),
                ('check_time', models.DateTimeField(auto_now_add=True)),
                ('account', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'db_table': 'broker_check_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CollectorApplyHistory',
            fields=[
                ('serial', models.AutoField(primary_key=True, serialize=False)),
                ('apply_code', models.CharField(default=misc.misc.gen_uuid32, max_length=64, unique=True)),
                ('collector_code', models.CharField(blank=True, max_length=64, null=True)),
                ('account_code', models.CharField(blank=True, max_length=64, null=True)),
                ('state', models.IntegerField(blank=True, null=True)),
                ('apply_time', models.DateTimeField(auto_now_add=True)),
                ('apply_type', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'collector_apply_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CollectorBaseinfo',
            fields=[
                ('serial', models.AutoField(primary_key=True, serialize=False)),
                ('collector_code', models.CharField(default=misc.misc.gen_uuid32, max_length=64)),
                ('pcode', models.CharField(blank=True, max_length=64, null=True)),
                ('collector_name', models.CharField(max_length=64, verbose_name='姓名')),
                ('collector_tel', models.CharField(blank=True, max_length=16, null=True, validators=[misc.validate.validate_tel])),
                ('collector_mobile', models.CharField(max_length=16, validators=[misc.validate.validate_mobile], verbose_name='手机号码')),
                ('collector_email', models.CharField(blank=True, max_length=64, null=True, validators=[misc.validate.validate_email])),
                ('collector_idtype', models.IntegerField(default=1, verbose_name='证件类型')),
                ('collector_id', models.CharField(max_length=32, verbose_name='证件号码')),
                ('collector_graduate_school', models.CharField(max_length=255, verbose_name='毕业院校')),
                ('collector_major', models.CharField(max_length=255, verbose_name='专业')),
                ('collector_address', models.CharField(blank=True, max_length=255, null=True)),
                ('collector_city', models.IntegerField(verbose_name='归属城市')),
                ('collector_abstract', models.TextField(verbose_name='自我介绍')),
                ('education', models.CharField(max_length=8, verbose_name='学历')),
                ('owner_zipcode', models.CharField(blank=True, max_length=8, null=True)),
                ('state', models.IntegerField(default=1)),
                ('account_code', models.CharField(blank=True, max_length=64, null=True)),
                ('creater', models.CharField(blank=True, max_length=32, null=True)),
                ('insert_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'collector_baseinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CollectorCheckHistory',
            fields=[
                ('serial', models.AutoField(primary_key=True, serialize=False)),
                ('apply_code', models.CharField(blank=True, max_length=64, null=True)),
                ('opinion', models.TextField(blank=True, null=True)),
                ('result', models.IntegerField(blank=True, null=True)),
                ('check_time', models.DateTimeField(auto_now_add=True)),
                ('account', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'db_table': 'collector_check_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OwnerApplyHistory',
            fields=[
                ('serial', models.AutoField(primary_key=True, serialize=False)),
                ('apply_code', models.CharField(default=misc.misc.gen_uuid32, max_length=64, unique=True)),
                ('owner_code', models.CharField(blank=True, max_length=64, null=True)),
                ('account_code', models.CharField(blank=True, max_length=64, null=True)),
                ('state', models.IntegerField(blank=True, null=True)),
                ('apply_time', models.DateTimeField(auto_now_add=True)),
                ('apply_type', models.IntegerField(default=1)),
            ],
            options={
                'db_table': 'owner_apply_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OwnereApplyHistory',
            fields=[
                ('serial', models.AutoField(primary_key=True, serialize=False)),
                ('apply_code', models.CharField(default=misc.misc.gen_uuid32, max_length=64, unique=True)),
                ('owner_code', models.CharField(blank=True, max_length=64, null=True)),
                ('state', models.IntegerField(blank=True, null=True)),
                ('apply_time', models.DateTimeField(auto_now_add=True)),
                ('apply_type', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ownere_apply_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OwnereCheckHistory',
            fields=[
                ('serial', models.AutoField(primary_key=True, serialize=False)),
                ('apply_code', models.CharField(blank=True, max_length=64, null=True)),
                ('opinion', models.TextField(blank=True, null=True)),
                ('result', models.IntegerField(blank=True, null=True)),
                ('check_time', models.DateTimeField(auto_now_add=True)),
                ('account', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'db_table': 'ownere_check_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OwnerpCheckHistory',
            fields=[
                ('serial', models.AutoField(primary_key=True, serialize=False)),
                ('apply_code', models.CharField(blank=True, max_length=64, null=True)),
                ('opinion', models.TextField(blank=True, null=True)),
                ('result', models.IntegerField(blank=True, null=True)),
                ('check_time', models.DateTimeField(auto_now_add=True)),
                ('account', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'db_table': 'ownerp_check_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectTeamBaseinfo',
            fields=[
                ('serial', models.AutoField(primary_key=True, serialize=False)),
                ('pt_code', models.CharField(default=misc.misc.gen_uuid32, max_length=64, unique=True)),
                ('pt_name', models.CharField(blank=True, max_length=64, null=True)),
                ('pt_abbreviation', models.CharField(blank=True, max_length=255, null=True)),
                ('pt_abstract', models.TextField(blank=True, null=True)),
                ('pt_homepage', models.URLField(blank=True, max_length=128, null=True)),
                ('pt_type', models.IntegerField(blank=True, null=True)),
                ('pt_city', models.IntegerField(blank=True, null=True)),
                ('ecode', models.CharField(blank=True, max_length=64, null=True)),
                ('pt_level', models.IntegerField(default=1)),
                ('credit_value', models.IntegerField(default=0)),
                ('pt_people_name', models.CharField(blank=True, max_length=255, null=True)),
                ('pt_people_tel', models.CharField(blank=True, max_length=255, null=True, validators=[misc.validate.validate_mobile])),
                ('pt_people_type', models.IntegerField(default=1)),
                ('pt_people_id', models.CharField(blank=True, max_length=32, null=True)),
                ('pt_describe', models.TextField(blank=True, null=True)),
                ('comp_name', models.CharField(blank=True, max_length=255, null=True)),
                ('owner_license', models.CharField(blank=True, max_length=255, null=True)),
                ('pt_integral', models.IntegerField(default=0)),
                ('state', models.IntegerField(default=1)),
                ('account_code', models.CharField(blank=True, max_length=64, null=True)),
                ('creater', models.CharField(blank=True, max_length=32, null=True)),
                ('insert_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'project_team_baseinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectTeamMember',
            fields=[
                ('serial', models.AutoField(primary_key=True, serialize=False)),
                ('pt_code', models.CharField(blank=True, max_length=64, null=True)),
                ('ptm_code', models.CharField(default=misc.misc.gen_uuid32, max_length=64, unique=True)),
                ('ptmcaption', models.CharField(blank=True, max_length=32, null=True)),
                ('pcode', models.CharField(blank=True, max_length=64, null=True)),
                ('ptm_name', models.CharField(blank=True, max_length=32, null=True)),
                ('ptm_tel', models.CharField(blank=True, max_length=16, null=True, validators=[misc.validate.validate_tel])),
                ('ptm_mobile', models.CharField(blank=True, max_length=16, null=True, validators=[misc.validate.validate_mobile])),
                ('ptm_email', models.CharField(blank=True, max_length=64, null=True, validators=[misc.validate.validate_email])),
                ('ptm_idtype', models.IntegerField(default=1)),
                ('ptm_id', models.CharField(blank=True, max_length=32, null=True)),
                ('ptm_education', models.CharField(blank=True, max_length=8, null=True)),
                ('ptm_abstract', models.TextField(blank=True, null=True)),
                ('ptm_leader', models.IntegerField(default=0)),
                ('state', models.IntegerField(default=1)),
                ('creater', models.CharField(blank=True, max_length=32, null=True)),
                ('insert_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'project_team_member',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResultOwnereBaseinfo',
            fields=[
                ('serial', models.AutoField(primary_key=True, serialize=False)),
                ('owner_code', models.CharField(default=misc.misc.gen_uuid32, max_length=64)),
                ('ecode', models.CharField(blank=True, max_length=64, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('owner_name', models.CharField(max_length=64, verbose_name='企业名称')),
                ('owner_tel', models.CharField(max_length=16, validators=[misc.validate.validate_mobile_tel], verbose_name='企业电话')),
                ('owner_mobile', models.CharField(blank=True, max_length=16, null=True, validators=[misc.validate.validate_mobile])),
                ('owner_email', models.CharField(blank=True, max_length=64, null=True, validators=[misc.validate.validate_email])),
                ('owner_license', models.CharField(max_length=64, validators=[misc.validate.validate_license], verbose_name='统一社会信用代码')),
                ('owner_abstract', models.TextField(verbose_name='企业简述')),
                ('homepage', models.URLField(blank=True, max_length=128, null=True)),
                ('creditvalue', models.IntegerField(default=0)),
                ('state', models.IntegerField(default=1)),
                ('account_code', models.CharField(blank=True, max_length=64, null=True)),
                ('creater', models.CharField(blank=True, max_length=32, null=True)),
                ('insert_time', models.DateTimeField(auto_now_add=True)),
                ('owner_name_abbr', models.CharField(max_length=32, verbose_name='企业简称')),
                ('owner_city', models.IntegerField(verbose_name='归属城市')),
                ('owner_abstract_detail', models.TextField(blank=True, null=True)),
                ('legal_person', models.CharField(blank=True, max_length=64, null=True)),
                ('owner_idtype', models.IntegerField(default=1)),
                ('owner_id', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'result_ownere_baseinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResultOwnerpBaseinfo',
            fields=[
                ('serial', models.AutoField(primary_key=True, serialize=False)),
                ('owner_code', models.CharField(default=misc.misc.gen_uuid32, max_length=64)),
                ('pcode', models.CharField(blank=True, max_length=64, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('owner_name', models.CharField(max_length=64, verbose_name='姓名')),
                ('owner_tel', models.CharField(blank=True, max_length=16, null=True, validators=[misc.validate.validate_tel])),
                ('owner_mobile', models.CharField(max_length=16, validators=[misc.validate.validate_mobile], verbose_name='手机号码')),
                ('owner_email', models.CharField(blank=True, max_length=64, null=True, validators=[misc.validate.validate_email])),
                ('owner_idtype', models.IntegerField(default=1, verbose_name='证件类型')),
                ('owner_id', models.CharField(max_length=32, verbose_name='证件号码')),
                ('owner_abstract', models.TextField(verbose_name='自我介绍')),
                ('education', models.CharField(default=3, max_length=8, verbose_name='学历')),
                ('owner_caption', models.CharField(blank=True, max_length=32, null=True)),
                ('owner_addr', models.CharField(blank=True, max_length=255, null=True)),
                ('owner_zipcode', models.CharField(blank=True, max_length=8, null=True)),
                ('state', models.IntegerField(default=1)),
                ('account_code', models.CharField(blank=True, max_length=64, null=True)),
                ('creater', models.CharField(blank=True, max_length=32, null=True)),
                ('insert_time', models.DateTimeField(auto_now_add=True)),
                ('owner_city', models.IntegerField(verbose_name='归属城市')),
                ('university', models.CharField(max_length=64, verbose_name='毕业院校')),
                ('profession', models.CharField(max_length=64, verbose_name='专业')),
            ],
            options={
                'db_table': 'result_ownerp_baseinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TeamApplyHistory',
            fields=[
                ('serial', models.AutoField(primary_key=True, serialize=False)),
                ('apply_code', models.CharField(default=misc.misc.gen_uuid32, max_length=64, unique=True)),
                ('team_code', models.CharField(blank=True, max_length=64, null=True)),
                ('account_code', models.CharField(blank=True, max_length=64, null=True)),
                ('state', models.IntegerField(blank=True, null=True)),
                ('apply_time', models.DateTimeField(auto_now_add=True)),
                ('apply_type', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'team_apply_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TeamCheckHistory',
            fields=[
                ('serial', models.AutoField(primary_key=True, serialize=False)),
                ('apply_code', models.CharField(blank=True, max_length=64, null=True)),
                ('opinion', models.TextField(blank=True, null=True)),
                ('result', models.IntegerField(blank=True, null=True)),
                ('check_time', models.DateTimeField(auto_now_add=True)),
                ('account', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'db_table': 'team_check_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExpertApplyHistory',
            fields=[
                ('serial', models.AutoField(primary_key=True, serialize=False)),
                ('apply_code', models.CharField(default=misc.misc.gen_uuid32, max_length=64, unique=True)),
                ('expert_code', models.CharField(max_length=64)),
                ('account_code', models.CharField(blank=True, max_length=64, null=True)),
                ('state', models.IntegerField(default=1)),
                ('apply_time', models.DateTimeField(auto_now_add=True)),
                ('apply_type', models.IntegerField(default=1)),
            ],
            options={
                'db_table': 'expert_apply_history',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ExpertBaseinfo',
            fields=[
                ('serial', models.AutoField(primary_key=True, serialize=False)),
                ('expert_code', models.CharField(default=misc.misc.gen_uuid32, max_length=64, unique=True, verbose_name='专家编码')),
                ('pcode', models.CharField(blank=True, max_length=64, null=True)),
                ('expert_name', models.CharField(max_length=64, verbose_name='专家姓名')),
                ('expert_tel', models.CharField(blank=True, max_length=16, null=True, validators=[misc.validate.validate_tel])),
                ('expert_mobile', models.CharField(max_length=16, validators=[misc.validate.validate_mobile], verbose_name='手机号码')),
                ('expert_email', models.CharField(blank=True, max_length=64, null=True, validators=[misc.validate.validate_email])),
                ('expert_id_type', models.IntegerField(default=1, verbose_name='证件类型')),
                ('expert_id', models.CharField(max_length=32, verbose_name='证件号码')),
                ('expert_abstract', models.TextField(verbose_name='自我介绍')),
                ('education', models.CharField(default=3, max_length=8, verbose_name='学历')),
                ('expert_city', models.IntegerField(verbose_name='归属城市')),
                ('expert_university', models.CharField(max_length=64, verbose_name='毕业院校')),
                ('expert_major', models.CharField(max_length=64, verbose_name='专业')),
                ('expert_caption', models.CharField(blank=True, max_length=32, null=True)),
                ('homepage', models.URLField(blank=True, max_length=128, null=True)),
                ('expert_addr', models.CharField(blank=True, max_length=255, null=True)),
                ('ecode', models.CharField(blank=True, max_length=64, null=True)),
                ('expert_level', models.IntegerField(default=1, null=True)),
                ('credit_value', models.IntegerField(default=0, null=True)),
                ('expert_integral', models.IntegerField(blank=True, null=True)),
                ('state', models.IntegerField(default=1)),
                ('creater', models.CharField(blank=True, max_length=32, null=True)),
                ('account_code', models.CharField(blank=True, max_length=32, null=True)),
                ('insert_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'expert_baseinfo',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ExpertCheckHistory',
            fields=[
                ('serial', models.AutoField(primary_key=True, serialize=False)),
                ('apply_code', models.CharField(blank=True, max_length=64, null=True)),
                ('opinion', models.TextField(blank=True, null=True)),
                ('result', models.IntegerField(blank=True, null=True)),
                ('check_time', models.DateTimeField(auto_now_add=True)),
                ('account', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'db_table': 'expert_check_history',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IdentityAuthorizationInfo',
            fields=[
                ('serial', models.AutoField(primary_key=True, serialize=False)),
                ('account_code', models.CharField(max_length=64)),
                ('identity_code', models.CharField(max_length=64)),
                ('iab_time', models.DateTimeField(blank=True, null=True)),
                ('iae_time', models.DateTimeField(blank=True, null=True)),
                ('state', models.IntegerField(default=1)),
                ('creater', models.CharField(blank=True, max_length=32, null=True)),
                ('insert_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'identity_authorization_info',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IdentityInfo',
            fields=[
                ('serial', models.AutoField(primary_key=True, serialize=False)),
                ('identity_code', models.CharField(default=misc.misc.gen_uuid32, max_length=64, unique=True)),
                ('identity_name', models.CharField(max_length=64, unique=True)),
                ('identity_memo', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.IntegerField(default=1)),
                ('creater', models.CharField(blank=True, max_length=32, null=True)),
                ('insert_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'identity_info',
                'managed': True,
            },
        ),
        migrations.AlterUniqueTogether(
            name='identityauthorizationinfo',
            unique_together={('account_code', 'identity_code')},
        ),
    ]
